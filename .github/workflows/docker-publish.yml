name: Build and Push Docker Image

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - main

jobs:
  code-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2.2.0
        with:
          args: >
            -Dsonar.projectKey=mirovv_engineering-fundamentals
            -Dsonar.organization=mirovv
            -Dsonar.sources=.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Auto-generated by GitHub
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  test:
    needs: code-analysis
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Or your project version

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test -- --verbose

  publish-docker-image:
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Azure Container Registry
        run: echo "${{ secrets.ACR_PASSWORD }}" | docker login cilernreiseengineering.azurecr.io -u CILernreiseEngineering -p $(cat -)

      - name: Generate and Push Git Tag for New Version
        id: versioning
        run: |
          # Fetch all tags
          git fetch --tags

          # Get the latest version tag or default to v0.0
          latest_tag=$(git tag -l 'v*' | sort -V | tail -n 1)
          echo "Latest tag: $latest_tag"

          if [[ -z "$latest_tag" ]]; then
            new_tag="v0.1"
          else
            # Extract the numeric part and increment by 0.1
            version_number=${latest_tag#v}
            new_version=$(awk "BEGIN {printf \"%.1f\", $version_number + 0.1}")
            new_tag="v$new_version"
          fi

          # Create and push the new tag
          git tag "$new_tag"
          git push origin "$new_tag"

          # Output the tag
          echo "full_tag=$new_tag" >> "$GITHUB_OUTPUT"

      - name: Build the Docker image
        run: |
          docker build -t cilernreiseengineering.azurecr.io/ipt-spins:${{ steps.versioning.outputs.full_tag }} \
                      -t cilernreiseengineering.azurecr.io/ipt-spins:latest .

      - name: Push the Docker images to ACR
        run: |
          docker push cilernreiseengineering.azurecr.io/ipt-spins:${{ steps.versioning.outputs.full_tag }}
          docker push cilernreiseengineering.azurecr.io/ipt-spins:latest
